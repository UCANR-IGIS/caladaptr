% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ca_getvals_db.R
\name{ca_getvals_db}
\alias{ca_getvals_db}
\title{Write values from an API request to a local database}
\usage{
ca_getvals_db(
  x,
  db_fn,
  db_tbl,
  indices = NULL,
  new_recs_only = TRUE,
  trans_len = 100,
  lookup_tbls = TRUE,
  pause_n = 1e+06,
  pause_secs = 60,
  stop_on_err = TRUE,
  quiet = FALSE,
  debug = TRUE
)
}
\arguments{
\item{x}{A Cal-Adapt API request}

\item{db_fn}{File name of a SQLite database. See Details.}

\item{db_tbl}{The name of a database table. See Details.}

\item{indices}{Not used yet}

\item{new_recs_only}{Write new records only to the database. See Details.}

\item{trans_len}{Number of APIs calls per write transaction. See Details.}

\item{lookup_tbls}{Use lookup tables}

\item{pause_n}{Number of values after which a built-in pause is triggered. See Details.}

\item{pause_secs}{Number of seconds to pause. See Details.}

\item{stop_on_err}{Stop if the server returns an error}

\item{quiet}{Suppress messages}

\item{debug}{Print additional output at the console}
}
\value{
A tibble linked to the SQLite database.
}
\description{
Write values from an API request to a local database
}
\details{
Use \code{ca_getvals_db} when retrieving large volumes of data (i.e., tens of thousands of values). This function
writes the data to a SQLite database as they're received so you don't run the risk of exhausting your RAM. Another
benefit is if the operation is interrupted before it finished (e.g., due to an internet hiccup), it will pick up
where it left off. Note however for small amounts of data there is no advantage to putting it in a database
as it will be slower to retrieve and work with.

\code{db_fn} should be a file name with path to a SQLite database. A SQLIte database is a single file typically
with a \emph{.db} or \emph{.sqlite} extension. If the database doesn't exist, it will be created. If it already
exists, the new data will be added to it.

\code{db_tbl} should the name of a table within the database where the new data will be saved. The table name should not
contain special characters and spaces are discouraged. If \code{new_recs_only = TRUE}, only new records will be
added to the database. \code{trans_len} defines the number of API calls per transaction (i.e. how many API calls of data to
accumulate before doing a write operation to the database). This can speed things up. Set it to 0 to disable transactions.

\code{pause_n} is the number of values after which a built-in pause of length \code{pause_secs} is triggered. This is intended
to avoid disruption on the Cal-Adapt server (specifically cache management).

The returned tibble is linked to the SQLite datbase. For the most part you can use the same dplyr functions to manipulate
the results, but to retrieve the actual values you need to use `collect()`. For more info working with a linked database,
see \url{https://dbplyr.tidyverse.org/articles/dbplyr.html}.
}
